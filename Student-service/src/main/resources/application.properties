
spring.application.name=Student-service

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/studentdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=08Jan@2003

# JDBC Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect



# JWT Secret (must be a Base64 encoded string, at least 32 bytes after decoding)
app.jwt.secret=YXNkZmdoamtsbW5vcHFyc3R1dnd4eXo0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTA= 

# Access token validity (e.g., 15 minutes = 900000 ms)
app.jwt.expiration-ms=900000

# Refresh token validity (e.g., 7 days = 604800000 ms)
app.jwt.refresh-expiration-ms=604800000



# OAuth2 (Google example)
# spring.security.oauth2.client.registration.google.client-id=479241777098-40kjught15dvc4094on745ns9g6tb2eq.apps.googleusercontent.com
# spring.security.oauth2.client.registration.google.client-secret=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
# spring.security.oauth2.client.registration.google.scope=openid,profile,email
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# frontend to redirect after success (use your frontend origin)
# app.oauth2.redirect-uri-on-success=http://localhost:3000/oauth2/redirect


# Logging Configuration

# logging.level.com.CRUD.app=DEBUG
# logging.level.org.springframework.web=INFO
# logging.level.org.hibernate.SQL=DEBUG
# logging.root.level=INFO
# logging.pattern.console="%d{HH:mm:ss:SSS} [%thread] %-5level %logger{20} - %msg%n"